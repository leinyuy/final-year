rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Projects collection rules
    match /projects/{projectId} {
      // Anyone can read public projects
      allow read: if isAuthenticated() && 
        (resource.data.visibility == 'public' || 
         resource.data.clientId == request.auth.uid);
      
      // Only authenticated users can create projects
      allow create: if isAuthenticated() && 
        request.resource.data.clientId == request.auth.uid;
      
      // Only project owners can update/delete their projects
      allow update, delete: if isAuthenticated() && 
        resource.data.clientId == request.auth.uid;
    }

    // Applications collection rules
    match /applications/{applicationId} {
      // Users can read their own applications
      allow read: if isAuthenticated() && 
        (resource.data.developerId == request.auth.uid || 
         resource.data.clientId == request.auth.uid);
      
      // Developers can create applications
      allow create: if isAuthenticated() && 
        request.resource.data.developerId == request.auth.uid;
      
      // Only application owners can update their applications
      allow update: if isAuthenticated() && 
        resource.data.developerId == request.auth.uid;
    }

    // Users collection rules
    match /users/{userId} {
      // Users can read any user profile
      allow read: if isAuthenticated();
      
      // Users can only create/update their own profile
      allow create, update: if isAuthenticated() && 
        userId == request.auth.uid;
    }

    // Messages collection rules
    match /messages/{messageId} {
      // Users can read messages they're part of
      allow read: if isAuthenticated() && 
        (resource.data.senderId == request.auth.uid || 
         resource.data.receiverId == request.auth.uid);
      
      // Users can only create messages where they're the sender
      allow create: if isAuthenticated() && 
        request.resource.data.senderId == request.auth.uid;
    }
  }
} 